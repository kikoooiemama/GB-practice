# Created by Nikolay Pakhomov 19.07.2024
# 1. Проанализировать результат работы какой-нибудь программы с наиболее эффективным использованием памяти.
# Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
# a. выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
# b. написать 3 варианта кода (один у вас уже есть);
# c. результаты анализа (количество занятой памяти в вашей среде разработки) вставить в виде комментариев в файл с
# кодом. Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
# d. написать общий вывод: какой из трёх вариантов лучше и почему.

import random
from count_mem_size import count_size

random.seed(100)
LST_LEN = 10
num_lst = [random.randint(0, 11) for _ in range(LST_LEN)]
even_num = []
for i in range(LST_LEN):
    if num_lst[i] % 2 == 0:
        even_num.append(i + 1)
print('Исходный массив:')
print(f'{num_lst}')
print('Массив индексов четных чисел:')
print(f"{even_num}")

sum_ = 0
var_lst = (LST_LEN, num_lst, even_num, i)
for i in var_lst:
    sum_ += count_size(i)
print(f'Под переменные задействовано {sum_} байт памяти.')
# Под переменные задействовано 780 байт памяти.
